#!/bin/sh
#--------------------------------------------------------
# User specific functions
#--------------------------------------------------------
# Get an absolute path
# usage: path=$(abs_path $1)
function abs_path {
case $1 in
  */*)
    (cd "${1%/*}" &>/dev/null && printf "%s/%s" "$(pwd)" "${1##*/}");;
  *)
    printf "%s/%s" "$(pwd)" "$1";;
esac
}

# List of all installed Perl modules
function cpan_list {
  perl -MExtUtils::Installed -MData::Dumper -e  'my ($inst) = ExtUtils::Installed->new(); print Dumper($inst->modules());'
}

# move file to the Gnome Wastebacket
function delete {
echo $FULLNAME
if [ $1 ]; then
  if [ $1 == "--help" ]; then
    echo "Usage: delete [path/filename]"
    echo "Delete is a safer alternative to rm (remove), as Delete will send your file to the Gnome Wastebasket."
  else
    cd `dirname $1`
    pathname=`pwd`
    filename=$1 ##*/
    if [ $pathname != "/" ]; then
      fullname="$pathname/$filename"
    else
      fullname="/$filename"
    fi
    mv $1 ~/.local/share/Trash/files/
    timestamp="`date +%Y`-`date +%m`-`date +0`T`date +%X`"
    echo -e "[Trash Info]\nPath=$fullname\nDeletionDate=$timestamp" >> ~/.local/share/Trash/info/$filename.trashinfo
  fi
else
  echo -e "$0: missing operand\nTry '$0 --help' for more information."
fi
}

# Converts png images into eps
function png2eps {
  fname=`basename $1 .png`
  convert $1 $fname.ps
  ps2eps -f --fixps $fname.ps
}

# If file is a TeX file, then run gvim synchronized with srcltx
function gvim {
  eval `perl -e '
    use File::Basename;
    my ($fn, $fp, $fs) = fileparse($ARGV[0], qr:\\.[^.]*:);
    if ($fs eq ".tex") { \
      print "/usr/local/bin/gvim --servername vimtex $ARGV[0]";
    } else { \
      print "/usr/local/bin/gvim $ARGV[0]";
    }' $1`
}

# Generates a pass
# e.g. pass "gmail.com"
function pass {
  echo $1 | md5sum | sed -e 's/0/O/g' | sed -e 's/1/;/g' | sed -e 's/2/@/g' | sed -e 's/4/%/g' | sed -e 's/b/B/g'
}

# Tests tgz integrity
function tgz-test {
  tar ztf $1 > /dev/null && echo OK || echo FAIL
}

# One command to extract archives
function ex {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2) tar xjf $1 ;;
      *.tar.gz) tar xzf $1 ;;
      *.bz2) bunzip2 $1 ;;
      *.rar) rar x $1 ;;
      *.gz) gunzip $1 ;;
      *.tar) tar xf $1 ;;
      *.tbz2) tar xjf $1 ;;
      *.tgz) tar xzf $1 ;;
      *.zip) unzip $1 ;;
      *.Z) uncompress $1 ;;
      *.7z) 7z x $1 ;;
      *) echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

compress () {
  if [ $1 ]; then
    case $1 in
      tbz)
        tar cjvf $2.tar.bz2 $2 ;;
      tgz)
        tar czvf $2.tar.gz $2 ;;
      tar)
        tar cpvf $2.tar $2 ;;
      bz2)
        bzip $2 ;;
      gz)
        gzip -c -9 -n $2 > $2.gz ;;
      zip)
        zip -r $2.zip $2 ;;
      7z)
        7z a $2.7z $2 ;;
      *)
        echo "Unable to compress '$1'" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

calc() {
  echo $* | bc
}

cdl() {
  cd "$1" && ls -l
}

total() {
  du -ch $1 | grep total
}
